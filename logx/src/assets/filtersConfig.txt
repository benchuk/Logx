[{"name":"RideMap","text":"if(!line.includes('updateFusedLocation')) return null\nlet latlon = line.split(' ')[7].split(',');\nreturn {lat:parseFloat(latlon[0]),lon:parseFloat(latlon[1])};","type":{"name":"map","desc":"function(line){ // should return {lat:lt,lon:ln} or null","icon":"place"},"valid":true,"sample":"03-05 07:28:32.993 W/FusedLocation(  649): updateFusedLocation mFusedLocation=Location[fused-offboard 32.093543,34.803835 acc=12 et=+47m49s734ms alt=8.664999961853027 vel=8.024 bear=129.847]"},{"name":"SPEED","text":"if(!line.includes('onSpeedFromGpsReceived')) return null\nreturn parseFloat(line.split(' ')[5])","type":{"name":"graph","desc":"function(line){ // should return a number of null","icon":"show_chart"},"valid":true,"sample":"07-09 13:12:07.016 D/SENSORSDATA( 1202): onSpeedFromGpsReceived: 6.72"},{"name":"SpeedFromCadence","text":"if(!line.includes('onSpeedReceived: from device: CadenceSpeed')) return null\nreturn parseFloat(line.split(' ')[10])","type":{"name":"graph","desc":"function(line){ // should return a number of null","icon":"show_chart"},"valid":true,"sample":"07-09 13:12:07.758 D/SENSORSDATA( 1202): onSpeedReceived: from device: CadenceSpeed with value: 24.098981366459626"},{"name":"HRM","text":"if(!line.includes('onHeartrateReceived')) return null\nreturn parseFloat(line.split(' ')[7])","type":{"name":"graph","desc":"function(line){ // should return a number of null","icon":"show_chart"},"valid":true,"sample":"07-09 13:12:08.396 D/SENSORSDATA( 1202): onHeartrateReceived: (before filter) 141 from device type: HeartRate"},{"name":"Altitude","text":"if(!line.includes('updateFusedLocation')) return null\nreturn parseFloat(line.split(' ')[10].split('=')[1])","type":{"name":"graph","desc":"function(line){ // should return a number of null","icon":"show_chart"},"valid":true,"sample":"07-09 13:58:49.966 W/FusedLocation(  635): updateFusedLocation mFusedLocation=Location[fused-offboard 44.507756,-89.130807 acc=5 et=+16h34m53s500ms alt=289.14898681640625 vel=0.0 bear=333.281]"},{"name":"Power","text":"if(!line.includes('onPowerReceived')) return null\nreturn parseFloat(line.split(' ')[7])","type":{"name":"graph","desc":"function(line){ // should return a number of null","icon":"show_chart"},"valid":true,"sample":"07-09 13:58:47.858 D/SENSORSDATA( 1202): onPowerReceived: with value: 0 from deviceType: PowerLeft"},{"name":"GpsTime","text":"if(!line.includes('updateFusedLocation')) return null\nvar timeData = line.split(' ')[9].split('=')[1].replace('+',\"\").replace('h',\":\").replace('m',\":\").replace('s',\":\").replace('ms',\"\").split(\":\")\nreturn timeData[1]","type":{"name":"graph","desc":"function(line){ // should return a number of null","icon":"show_chart"},"valid":true,"sample":"07-09 10:59:35.031 W/FusedLocation(  635): updateFusedLocation mFusedLocation=Location[fused-offboard 44.200629,-89.120134 acc=5 et=+13h35m38s563ms alt=270.8450012207031 vel=9.35 bear=15.82]"},{"name":"GpsAcc","text":"if(!line.includes('updateFusedLocation')) return null\nreturn parseFloat(line.split(' ')[8].split(\"=\")[1])","type":{"name":"graph","desc":"function(line){ // should return a number of null","icon":"show_chart"},"valid":true,"sample":"07-09 10:05:50.123 W/FusedLocation(  635): updateFusedLocation mFusedLocation=Location[fused-offboard 44.119749,-89.201531 acc=5 et=+12h41m53s653ms alt=274.9880065917969 vel=7.52 bear=329.721]"},{"name":"GpsAccTime","text":"if(!line.includes('updateFusedLocation')) return null\nvar value = parseFloat(line.split(' ')[8].split(\"=\")[1])\nvar time =  \"2019-\" + line.split(' ')[0] + \"T\" + line.split(' ')[1]\nreturn {time:time,value:value}","type":{"name":"timegraph","desc":"function(line){ // should return {time:t,value:v} or null","icon":"timer"},"valid":true,"sample":"07-09 10:05:50.123 W/FusedLocation(  635): updateFusedLocation mFusedLocation=Location[fused-offboard 44.119749,-89.201531 acc=5 et=+12h41m53s653ms alt=274.9880065917969 vel=7.52 bear=329.721]"}]